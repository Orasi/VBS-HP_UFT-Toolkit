'**********************************************************************
' Function Name: GetLatestDownload
' Purpose: Return the environment value from input parameters
' Author: Tom Margrave
' Input: String containing the environment variable name'
' Return: Returns the value of the environment variable
' Prerequisites:
'**********************************************************************
Function getEnv(myEnvironmentVariable)
	Set WshShell = CreateObject("WScript.Shell")
	getEnv = WshShell.ExpandEnvironmentStrings(myEnvironmentVariable)
	Set WshShell = Nothing
End Function




'**********************************************************************
' Function Name: GetLatestDownload
' Purpose: Return the path to the last downloaded  file by the current USERPROFILE
' Author:Adam Thomas
' Input: none
' Return: String of the last file downloaded
' Prerequisites:
'	Functions
' 			getEnv()
'**********************************************************************
Function GetLatestDownload()
	DPath = getEnv("%USERPROFILE%") & "\Downloads"

	Set oFolder=createobject("scripting.filesystemobject").getfolder(DPath)
	If oFolder.Files.Count < 1 Then
		GetLatestDownload = "No Files in downloads folder"
	Else

		For Each aFile In oFolder.Files
			If sNewest = "" Then
				Set fNewest = aFile
				sNewest = aFile.Name
			Else
				If fNewest.DateCreated < aFile.DateCreated Then
					Set fNewest = aFile
				End If
			End If
		Next

		GetLatestDownload = DPath & "\" & fNewest.Name
	End If
	Set oFolder= Nothing
End Function


'**********************************************************************
' Function Name: IESave
' Purpose: Uses the IE download prompt to same and locate a file being saved
'	from IE
' Author: Adam Thomas
' Input:
'	Timeout
' Return:
' Prerequisites:
'	methods:
' 		GetLatestDownload()
'**********************************************************************
Function IESave(Timeout)
	PossibleOldDL = GetLatestDownload()

	Setting("DefaultTimeOut")= "500"
	Break = False
	Success = False
	StartTime = Timer
	Do
		If Browser("GenericBrowser").WinObject("Notification bar").WinToolbar("Notification bar").Exist(1) Then
			Browser("GenericBrowser").WinObject("Notification bar").WinToolbar("Notification bar").Press "Save", micLeftBtn
			Wait(5)
			Browser("GenericBrowser").WinObject("Notification bar").WinButton("Close").Click
			Success = True
			Exit Do
		End If

		If Browser("Browser").Dialog("Windows Internet Explorer").WinButton("Save").Exist(1) Then
			Browser("Browser").Dialog("Windows Internet Explorer").WinButton("Save").Click
			Wait(1)
			Browser("GenericBrowser").WinObject("Notification bar").WinButton("Close").Click
			Success = True
			Exit Do
		End If

		If Browser("Oracle BI Interactive").WinObject("Notification bar").WinButton("Save").Exist(1) Then
			Browser("Oracle BI Interactive").WinObject("Notification bar").WinButton("Save").Click
			Wait(1)
			Browser("Oracle BI Interactive").WinObject("Notification bar").WinButton("Close").Click
			Success = True
			Exit Do
		End If


		EndTime = timer
		If (EndTime - StartTime) > Timeout Then
			Success = False
			reporter.ReportEvent micFail, "Download File", "Downloading file timed out after " & Round(EndTime - StartTime,2) & " seconds."
			ExitTestIteration
			Exit Do
		End If
	Loop Until Break
	EndTime = timer
	If Success Then
		SL = GetLatestDownload()
		If SL <> PossibleOldDL Then
			reporter.ReportEvent micPass, "Download File", "Downloaded file in " & Round(EndTime - StartTime,2) & " seconds." & ML(2) _
			& SL
		Else
			SL = ""
			reporter.ReportEvent micFail, "Could Not Download File", ""
			ExitTestIteration
		End If
		IESave = SL
	End If
	Setting("DefaultTimeOut")= "30000"
End Function
