'**********************************************************************
' Function Name: GetLatestDownload
' Purpose: Return the path to the last downloaded  file by the current USERPROFILE
' Author:Adam Thomas
' Input: none
' Return: String of the last file downloaded
' Prerequisites:
'	Functions
'			getEnv()
' Location: https://github.com/Orasi/VBS-HP_UFT-Toolkit
' Updated by: Tom Margrave at QualiTest Group
'**********************************************************************
Function GetLatestDownload()
	DPath = getEnv("%USERPROFILE%") & "\Downloads"

	Set oFolder=createobject("scripting.filesystemobject").getfolder(DPath)
	If oFolder.Files.Count < 1 Then
		GetLatestDownload = "No Files in downloads folder"
	Else

		For Each aFile In oFolder.Files
			If sNewest = "" Then
				Set fNewest = aFile
				sNewest = aFile.Name
			Else
				If fNewest.DateCreated < aFile.DateCreated Then
					Set fNewest = aFile
				End If
			End If
		Next

		GetLatestDownload = DPath & "\" & fNewest.Name
	End If
	Set oFolder= Nothing
End Function

'**********************************************************************
' Function Name: FileSize
' Purpose: Returns the  size of a file
' Author: Adam Thomas
' Input: String containing file Path
' Return: Size of file'
' Prerequisites: None
' Location: https://github.com/Orasi/VBS-HP_UFT-Toolkit
' Updated by: Tom Margrave at QualiTest Group
'**********************************************************************
Function FileSize(FilePath)
	Set FileSys = CreateObject("Scripting.FileSystemObject")
	FileSize = FileSys.GetFile(FilePath).Size
	Set FileSys = Nothing
End Function

'**********************************************************************
' Function Name: DeleteFileByPath
' Purpose: Delete a File from the path provided
' Author: Adam Thomas
' Purpose: Returns the  size of a file
' Input: String containing file Path
' Return: none
' Prerequisites: File must exist that is deleting
' Location: https://github.com/Orasi/VBS-HP_UFT-Toolkit
' Updated by: Tom Margrave at QualiTest Group
'**********************************************************************
Function DeleteFileByPath(FilePath)
	Set FileSys = CreateObject("Scripting.FileSystemObject")
	If FileSys.FileExists(FilePath) Then
		FileSys.DeleteFile FilePath
	End If
	Set FileSys =nothing
End Function

'**********************************************************************
' Function Name: CreateTempFolder
' Purpose: Creates a Temporary folder with path provided
' Author: Adam Thomas
' Input: String containing folder Path to be contained
' Return: none
' Prerequisites: Permissions to create Folder
' Location: https://github.com/Orasi/VBS-HP_UFT-Toolkit
' Updated by: Tom Margrave at QualiTest Group
'**********************************************************************
Function CreateTempFolder(FolderPath)
	Set FileSys=CreateObject("Scripting.FileSystemObject")
	If Not FileSys.FolderExists(FolderPath) Then
		newfolder = FileSys.CreateFolder (FolderPath)
	End If
	CreateTempFolder = FolderPath
	Set FileSys=nothing
End Function

'**********************************************************************
' Function Name: CreateTempFolder
' Purpose: Returns the current users temporary folder path
' Author: Adam Thomas
' Input: None
' Return: String of the current users temporary folder path
' Prerequisites:
' Location: https://github.com/Orasi/VBS-HP_UFT-Toolkit
' Updated by: Tom Margrave at QualiTest Group
'**********************************************************************
Function GetSystemTempFolder()
	Const TemporaryFolder = 2
 	Set fso = CreateObject("Scripting.FileSystemObject")
	GetSystemTempFolder = fso.GetSpecialFolder(TemporaryFolder)
	Set fso = Nothing
End Function

'**********************************************************************
' Function Name: GetChildFolders
' Purpose: Retuns list of child folder seperatated with tilde '~'
' Author: Adam Thomas
'           This does not return grandchildren folders'
' Input: path to the folder path
' Return: Retuns list of child folder seperatated with tilde '~'
' Prerequisites: Input path must exist.
' Location: https://github.com/Orasi/VBS-HP_UFT-Toolkit
' Updated by: Tom Margrave at QualiTest Group
'**********************************************************************
Function GetChildFolders(ParentFolderPath)
	Set FileSys=CreateObject("Scripting.FileSystemObject")
	Set objFolder = FileSys.GetFolder(ParentFolderPath)
	Set objSubFolders = objFolder.SubFolders
	For Each objSubFolder in objSubFolders
			FolderList = objSubFolder.Name & "~" & FolderList
	Next
	GetChildFolders = Split(FolderList, "~")
	Set objSubFolders=nothing
	Set objFolder=nothing
	Set FileSys=nothing
End Function


'**********************************************************************
' Function Name: GetUserProfilePath
' Purpose: Returns the current users profile location
' Author: Adam Thomas
' Input: none
' Return: String containing path to the current users profile location.
' Prerequisites:
' Location: https://github.com/Orasi/VBS-HP_UFT-Toolkit
' Updated by: Tom Margrave at QualiTest Group
'**********************************************************************
Function GetUserProfilePath()
	GetUserProfilePath = getEnv("%USERPROFILE%")
End Function

'**********************************************************************
' Function Name: AddToHostFile
' Purpose: Add address to Host file
' Author: Adam Thomas
' Prerequisites:
' Location: https://github.com/Orasi/VBS-HP_UFT-Toolkit
' Updated by: Tom Margrave at QualiTest Group
'**********************************************************************
Function AddToHostFile (IPAddress, WebAddress)

	Const ForReading = 1, ForWriting = 2, ForAppending = 8, ReadOnly = 1
	Set fso = CreateObject("Scripting.FileSystemObject")

	WinDir =getEnv("%WinDir%")
	HostsFile = WinDir & "\System32\Drivers\etc\Hosts"

	Set objFile = fso.OpenTextFile(HostsFile, ForReading)

	Do Until objFile.AtEndOfStream
		If InStr (objFile.ReadLine, IPAddress) <> 0 Then
			objFile.Close
			Set objFile =nothing
			Set fso =nothing
			Exit Function
		End If
		i = i + 1
	Loop

	objFile.Close

	Set objFile = fso.GetFile(HostsFile)
	If objFile.Attributes AND ReadOnly Then
	objFile.Attributes = objFile.Attributes XOR ReadOnly
	End If
	Set filetxt = fso.OpenTextFile(HostsFile, ForAppending, True)
	filetxt.WriteLine(vbNewLine & IPAddress & "     " & WebAddress )
	filetxt.Close

	Set filetxt =nothing
	Set objFile=nothing
	Set fso =nothing
End Function

'**********************************************************************
' Function Name: CopyFileByFullPath
' Purpose: Copy's a file from one location to another.
' Author: Adam Thomas
' Input: FromPath  string of the source pathe with file name to be CopiedToPath
'          ToPath    String of the taget path with file name.
' Return: none
' Prerequisites: Both locations must exist and user must have Permissions
'         to copy to new target location.'
' Location: https://github.com/Orasi/VBS-HP_UFT-Toolkit
' Updated by: Tom Margrave at QualiTest Group
'**********************************************************************
Function CopyFileByFullPath (FromPath, ToPath)
	Set objFSO = CreateObject("Scripting.FileSystemObject")
	objFSO.CopyFile FromPath, ToPath, True
	Set objFSO =none
End Function

'**********************************************************************
' Function Name: CopyFile
' Purpose: Copy file from one location to antoher
' Author: Adam Thomas
' Input: CurrentPath Current path to source file
'         CopiedToPath  Path to the target location with file name.
' Return: string with the path to the loacion of new file
' Prerequisites: Existing source file must exist and user must have Permissions
'             to place target file in location'
' Location: https://github.com/Orasi/VBS-HP_UFT-Toolkit
' Updated by: Tom Margrave at QualiTest Group
'**********************************************************************
Public Function CopyFile(CurrentPath, CopiedToPath)
	ReportingOff
	If UCase(CopiedToPath) = "TEMP" or UCase(CopiedToPath) = "" Then
		CopiedToPath = CreateTempFolder("C:\Temp\UFT\")
	End If

	CopyFileByFullPath(CurrentPath, CopiedToPath)

	CopyFile = CopiedToPath & GetFileNameFromPath(CurrentPath)
	ReportingOn
End Function

'**********************************************************************
' Function Name: MoveFile
' Purpose:
' Author: Adam Thomas
' Prerequisites:
' Location: https://github.com/Orasi/VBS-HP_UFT-Toolkit
' Updated by: Tom Margrave at QualiTest Group
'**********************************************************************
Function MoveFile(OrigionalPath, NewPath)
	Set FileSys = CreateObject("Scripting.FileSystemObject")
	FileSys.MoveFile OrigionalPath, NewPath
	Set FileSys = Nothing
End Function

'**********************************************************************
' Function Name: RenameFile
' Purpose: Rename a file that exist to a new name
' Author: Adam Thomas
' Input: FullPath  Path with file name to the file being renamed
'         NewName   New file name
' Return: String containing the full path to new name file
' Prerequisites: User must have permission to delete and move file
'           Access to method in library DeleteFileByPath and MoveFile
' Location: https://github.com/Orasi/VBS-HP_UFT-Toolkit
' Updated by: Tom Margrave at QualiTest Group
'**********************************************************************
Function RenameFile(FullPath, NewName)
	Path = Replace(FullPath, Split(FullPath, "\")(Ubound(Split(FullPath, "\"))), "")

	'delete target file if exist '
	DeleteFileByPath(Path & NewName)

	MoveFile(FullPath, Path & NewName)
	RenameFile = Path & NewName
End Function


'**********************************************************************
' Function Name: GetLatestDownload
' Purpose: Return a string to the last download file path
' Author: Adam Thomas
' Input: none
' Return: String of the path location to download folder
' Prerequisites: method GetLatestDownload in this library is required
' Location: https://github.com/Orasi/VBS-HP_UFT-Toolkit
' Updated by: Tom Margrave at QualiTest Group
'**********************************************************************
Function GetLatestDownloadFilePath()
	aDPath = Split(GetLatestDownload, "\")
	For a = 0 To UBound(aDPath) - 1 Step 1
		Path = Path & aDPath(a) & "\"
	Next
	GetLatestDownloadFilePath = Path
End Function


'**********************************************************************
' Function Name: GetLatestDownload
' Purpose: Return a string to the last download file name
' Author: Adam Thomas
' Input: none
' Return: String of the path location to download name
' Prerequisites: method GetLatestDownload and GetLatestDownloadFileName
'       in this library is required
' Location: https://github.com/Orasi/VBS-HP_UFT-Toolkit
' Updated by: Tom Margrave at QualiTest Group
'**********************************************************************
Function GetLatestDownloadFileName()
	aDPath = Split(GetLatestDownload, "\")
	GetLatestDownloadFileName = aDPath(Ubound(aDPath))
End Function

'**********************************************************************
' Function Name: GetFileNameFromPath
' Purpose: Return file name from a string with full path
' Author: Unknown
' Input: FullPath  String containing full path
' Return: String of just the file name with extension
' Prerequisites: none
' Location: https://github.com/Orasi/VBS-HP_UFT-Toolkit
' Updated by: Tom Margrave at QualiTest Group
'**********************************************************************
Function GetFileNameFromPath(FullPath)
	aPath = Split(FullPath, "\")
	GetFileNameFromPath = aPath(Ubound(aPath))
End Function

'**********************************************************************
' Function Name: GetPathFromFullPath
' Purpose: Return path with out file name from a string with full path
' Author: Unknown
' Input: FullPath  String containing full path
' Return: String of just the path withou file name.
' Prerequisites: none
' Location: https://github.com/Orasi/VBS-HP_UFT-Toolkit
' Updated by: Tom Margrave at QualiTest Group
'**********************************************************************
Function GetPathFromFullPath(FullPath)
	aDPath = Split(FullPath, "\")
	For a = 0 To UBound(aDPath) - 1 Step 1
		Path = Path & aDPath(a) & "\"
	Next
	GetPathFromFullPath = Path
End Function

'**********************************************************************
' Function Name: GetFileExtension
' Purpose: Return File extension  from a string with full path
' Author: Unknown
' Input: FullPath  String containing full path
' Return: String of just the  file extension
' Prerequisites: none
' Location: https://github.com/Orasi/VBS-HP_UFT-Toolkit
' Updated by: Tom Margrave at QualiTest Group
'**********************************************************************
Function GetFileExtension(PathOrFileName)
	aPath = Split(PathOrFileName, ".")
	GetFileExtension = "." & aPath(Ubound(aPath))
End Function

'**********************************************************************
' Function Name: AddUIDToFile
' Purpose: ?????
' Author: Unknown
' Input: FullPath  String containing full path
' Return: String File
' Prerequisites: Following methods from this library
'        GetFileNameFromPath,  GetPathFromFullPath, GetFileExtension
'        RenameFile,
' Location: https://github.com/Orasi/VBS-HP_UFT-Toolkit
' Updated by: Tom Margrave at QualiTest Group
'**********************************************************************
Function AddUIDToFile(FullPath)
	UID = "UID" & UniqueNumber(7)
	FileName = GetFileNameFromPath(FullPath)
	Path = GetPathFromFullPath(FullPath)
	Ext = GetFileExtension(FullPath)
	AddUIDToFile = RenameFile(FullPath, Replace(FileName, Ext, " " & UID) & Ext)
End Function

'**********************************************************************
' Function Name: GetLatestDownload
' Purpose: Return the environment value from input parameters
' Author: Tom Margrave at QualiTest Group
' Input: String containing the environment variable name'
' Return: Returns the value of the environment variable
' Prerequisites:
' Location: https://github.com/Orasi/VBS-HP_UFT-Toolkit
' Updated by: Tom Margrave at QualiTest Group
'**********************************************************************
Function getEnv(myEnvironmentVariable)
	Set WshShell = CreateObject("WScript.Shell")
	getEnv = WshShell.ExpandEnvironmentStrings(myEnvironmentVariable)
	Set WshShell = Nothing
End Function
